package components

import "fmt"
import "sitex/views/view_utils"

type PaginationProps struct {
	CurrentMonth int
	NextDisable  bool
	PrevDisable  bool
}

templ Pagination(props PaginationProps) {
	{{
prevMonth := props.CurrentMonth - 1
nextMonth := props.CurrentMonth + 1
	}}
	<div class="flex items-center space-x-2">
		<!-- Кнопка предыдущего месяца -->
		if props.PrevDisable {
			<span class="p-2 rounded-lg bg-gray-50 opacity-50 cursor-not-allowed">
				<svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
				</svg>
			</span>
		} else {
			<a
				href={ fmt.Sprintf("/?month=%d", prevMonth) }
				class="p-2 rounded-lg bg-gray-100 hover:bg-gray-200 transition-colors"
			>
				<svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
				</svg>
			</a>
		}
		<!-- Текущий период -->
		<span class="text-sm font-medium text-gray-700">
			{ viewutils.GetMonthName(props.CurrentMonth) }
		</span>
		<!-- Кнопка следующего месяца -->
		if props.NextDisable {
			<span class="p-2 rounded-lg bg-gray-50 opacity-50 cursor-not-allowed">
				<svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
				</svg>
			</span>
		} else {
			<a
				href={ fmt.Sprintf("/?month=%d", nextMonth) }
				class="p-2 rounded-lg bg-gray-100 hover:bg-gray-200 transition-colors"
			>
				<svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
				</svg>
			</a>
		}
	</div>
}
